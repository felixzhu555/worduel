{"ast":null,"code":"var _jsxFileName = \"/Users/felix_3gpdyfd/webdev_projects/worduel-app/src/components/LetterRow.js\";\nimport React from 'react';\nimport LetterSquare from './LetterSquare';\nimport \"./letters.css\";\n\nfunction LetterRow(_ref) {\n  var guess = _ref.guess,\n      answer = _ref.answer,\n      isCurrentRow = _ref.isCurrentRow;\n  var letters = [\"\", \"\", \"\", \"\", \"\"];\n\n  for (var i = 0; i < guess.length; i++) {\n    letters[i] = guess.charAt(i);\n  }\n\n  var squares = [];\n\n  for (var _i = 0; _i < 5; _i++) {\n    var color = null;\n\n    if (isCurrentRow) {\n      color = \"white\";\n    } else {\n      // TODO: fix logic: PETTY vs CHEAT should have only 1 yellow T, not 2\n      if (answer.charAt(_i) === letters[_i]) {\n        color = \"green\";\n      } else if (answer.includes(letters[_i])) {\n        color = \"yellow\";\n      } else {\n        color = \"gray\";\n      }\n    }\n\n    squares.push( /*#__PURE__*/React.createElement(LetterSquare, {\n      key: _i,\n      letter: letters[_i],\n      color: color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 22\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"letter-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, squares);\n}\n\nexport default LetterRow;","map":{"version":3,"names":["React","LetterSquare","LetterRow","guess","answer","isCurrentRow","letters","i","length","charAt","squares","color","includes","push"],"sources":["/Users/felix_3gpdyfd/webdev_projects/worduel-app/src/components/LetterRow.js"],"sourcesContent":["import React from 'react';\nimport LetterSquare from './LetterSquare';\nimport \"./letters.css\";\n\nfunction LetterRow({guess, answer, isCurrentRow}) {\n\n    var letters = [\"\", \"\", \"\", \"\", \"\"];\n    for (let i = 0; i < guess.length; i++) {\n        letters[i] = guess.charAt(i);\n    }\n\n    var squares = [];\n    for (let i = 0; i < 5; i++) {\n        let color = null;\n        if (isCurrentRow) {\n            color = \"white\";\n        } else {\n            // TODO: fix logic: PETTY vs CHEAT should have only 1 yellow T, not 2\n            if (answer.charAt(i) === letters[i]) {\n                color = \"green\";\n            } else if (answer.includes(letters[i])) {\n                color = \"yellow\";\n            } else {\n                color = \"gray\";\n            }\n        }\n        squares.push(<LetterSquare key={i} letter={letters[i]} color={color}/>);\n    }\n\n    return (\n        <div className=\"letter-row\">\n            {squares}\n        </div>\n    )\n}\n\nexport default LetterRow;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,eAAP;;AAEA,SAASC,SAAT,OAAkD;EAAA,IAA9BC,KAA8B,QAA9BA,KAA8B;EAAA,IAAvBC,MAAuB,QAAvBA,MAAuB;EAAA,IAAfC,YAAe,QAAfA,YAAe;EAE9C,IAAIC,OAAO,GAAG,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,CAAd;;EACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAAK,CAACK,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;IACnCD,OAAO,CAACC,CAAD,CAAP,GAAaJ,KAAK,CAACM,MAAN,CAAaF,CAAb,CAAb;EACH;;EAED,IAAIG,OAAO,GAAG,EAAd;;EACA,KAAK,IAAIH,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAG,CAApB,EAAuBA,EAAC,EAAxB,EAA4B;IACxB,IAAII,KAAK,GAAG,IAAZ;;IACA,IAAIN,YAAJ,EAAkB;MACdM,KAAK,GAAG,OAAR;IACH,CAFD,MAEO;MACH;MACA,IAAIP,MAAM,CAACK,MAAP,CAAcF,EAAd,MAAqBD,OAAO,CAACC,EAAD,CAAhC,EAAqC;QACjCI,KAAK,GAAG,OAAR;MACH,CAFD,MAEO,IAAIP,MAAM,CAACQ,QAAP,CAAgBN,OAAO,CAACC,EAAD,CAAvB,CAAJ,EAAiC;QACpCI,KAAK,GAAG,QAAR;MACH,CAFM,MAEA;QACHA,KAAK,GAAG,MAAR;MACH;IACJ;;IACDD,OAAO,CAACG,IAAR,eAAa,oBAAC,YAAD;MAAc,GAAG,EAAEN,EAAnB;MAAsB,MAAM,EAAED,OAAO,CAACC,EAAD,CAArC;MAA0C,KAAK,EAAEI,KAAjD;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAAb;EACH;;EAED,oBACI;IAAK,SAAS,EAAC,YAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKD,OADL,CADJ;AAKH;;AAED,eAAeR,SAAf"},"metadata":{},"sourceType":"module"}