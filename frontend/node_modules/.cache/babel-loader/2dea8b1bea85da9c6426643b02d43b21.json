{"ast":null,"code":"import _slicedToArray from \"/Users/felix_3gpdyfd/webdev_projects/worduel-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/felix_3gpdyfd/webdev_projects/worduel-app/src/components/LetterRow.js\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nimport React from 'react';\nimport LetterSquare from './LetterSquare';\nimport \"./letters.css\";\n\nfunction LetterRow(_ref) {\n  var _this = this;\n\n  var guess = _ref.guess,\n      answer = _ref.answer,\n      isCurrentRow = _ref.isCurrentRow;\n  var letters = [\"\", \"\", \"\", \"\", \"\"];\n\n  for (var i = 0; i < guess.length; i++) {\n    letters[i] = guess.charAt(i);\n  }\n\n  if (isCurrentRow) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"letter-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, letters.map(function (letter, i) {\n      return /*#__PURE__*/React.createElement(LetterSquare, {\n        key: i,\n        letter: letter,\n        color: \"white\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 28\n        }\n      });\n    }));\n  }\n\n  var answerLetterCounts = new Map();\n  var guessLetterCounts = new Map();\n\n  var _iterator = _createForOfIteratorHelper(answer),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var letter = _step.value;\n\n      if (answerLetterCounts.has(letter)) {\n        answerLetterCounts.set(letter, answerLetterCounts.get(letter) + 1);\n      } else {\n        answerLetterCounts.set(letter, 1);\n      }\n\n      if (!guessLetterCounts.has(letter)) {\n        guessLetterCounts.set(letter, 0);\n\n        var _iterator3 = _createForOfIteratorHelper(guess),\n            _step3;\n\n        try {\n          for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n            var guessLetter = _step3.value;\n\n            if (guessLetter === letter) {\n              guessLetterCounts.set(letter, guessLetterCounts.get(letter) + 1);\n            }\n          }\n        } catch (err) {\n          _iterator3.e(err);\n        } finally {\n          _iterator3.f();\n        }\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var colors = [];\n\n  for (var _i = 0; _i < 5; _i++) {\n    var color = null;\n\n    if (answer.charAt(_i) === letters[_i]) {\n      color = \"green\";\n    } else if (answer.includes(letters[_i])) {\n      color = \"yellow\";\n    } else {\n      color = \"gray\";\n    }\n\n    colors.push(color);\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(answerLetterCounts),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var _ref4 = _step2.value;\n\n      var _ref3 = _slicedToArray(_ref4, 2);\n\n      var _letter = _ref3[0];\n      var ansCount = _ref3[1];\n      var diff = guessLetterCounts.get(_letter) - ansCount;\n\n      if (diff > 0) {\n        for (var _i3 = 4; _i3 >= 0 && diff > 0; _i3--) {\n          if (colors[_i3] === \"yellow\" && guess.charAt(_i3) === _letter) {\n            colors[_i3] = \"gray\";\n            diff--;\n          }\n        }\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  var squares = [];\n\n  for (var _i2 = 0; _i2 < 5; _i2++) {\n    squares.push( /*#__PURE__*/React.createElement(LetterSquare, {\n      key: _i2,\n      letter: letters[_i2],\n      color: colors[_i2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 22\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"letter-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, squares);\n}\n\nexport default LetterRow;","map":{"version":3,"names":["React","LetterSquare","LetterRow","guess","answer","isCurrentRow","letters","i","length","charAt","map","letter","answerLetterCounts","Map","guessLetterCounts","has","set","get","guessLetter","colors","color","includes","push","ansCount","diff","squares"],"sources":["/Users/felix_3gpdyfd/webdev_projects/worduel-app/src/components/LetterRow.js"],"sourcesContent":["import React from 'react';\nimport LetterSquare from './LetterSquare';\nimport \"./letters.css\";\n\nfunction LetterRow({guess, answer, isCurrentRow}) {\n\n    var letters = [\"\", \"\", \"\", \"\", \"\"];\n    for (let i = 0; i < guess.length; i++) {\n        letters[i] = guess.charAt(i);\n    }\n\n    if (isCurrentRow) {\n        return (\n            <div className=\"letter-row\">\n                {letters.map((letter, i) => {\n                    return <LetterSquare key={i} letter={letter} color=\"white\"/>;\n                })}\n            </div>\n        )\n    }\n\n    var answerLetterCounts = new Map();\n    var guessLetterCounts = new Map();\n    for (let letter of answer) {\n        if (answerLetterCounts.has(letter)) {\n            answerLetterCounts.set(letter, answerLetterCounts.get(letter) + 1);\n        } else {\n            answerLetterCounts.set(letter, 1);\n        }\n        if (!guessLetterCounts.has(letter)) {\n            guessLetterCounts.set(letter, 0);\n            for (let guessLetter of guess) {\n                if (guessLetter === letter) {\n                    guessLetterCounts.set(letter, guessLetterCounts.get(letter) + 1);\n                }\n            }\n        }\n    }\n    \n    var colors = [];\n    for (let i = 0; i < 5; i++) {\n        let color = null;\n        if (answer.charAt(i) === letters[i]) {\n            color = \"green\";\n        } else if (answer.includes(letters[i])) {\n            color = \"yellow\";\n        } else {\n            color = \"gray\";\n        }\n        colors.push(color);\n    }\n\n    for (let [letter, ansCount] of answerLetterCounts) {\n        let diff = guessLetterCounts.get(letter) - ansCount;\n        if (diff > 0) {\n            for (let i = 4; i >= 0 && diff > 0; i--) {\n                if (colors[i] === \"yellow\" && guess.charAt(i) === letter) {\n                    colors[i] = \"gray\";\n                    diff--;\n                }\n            }\n        }\n    }\n    \n    var squares = [];\n    for (let i = 0; i < 5; i++) {\n        squares.push(<LetterSquare key={i} letter={letters[i]} color={colors[i]}/>);\n    }\n\n    return (\n        <div className=\"letter-row\">\n            {squares}\n        </div>\n    )\n}\n\nexport default LetterRow;"],"mappings":"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"},"metadata":{},"sourceType":"module"}